---

#DESCRIPTION
#   This playbook deploys vSphere VMs based on inventory file

#NOTES 
#   File Name  : deploy-vm.yml
#   Author     : Miquel Mariano - @miquelMariano | https://miquelmariano.github.io
#   Version    : 1

#USAGE
#   ansible-playbook playbooks/deploy-vms.yml -i inventory/vms-to-deploy
#   
#CHANGELOG
#   v1 20/04/2017  Playbook creation
#   v2 07/03/2017  VMware por vExperts
#   v3 16/08/2019  Adapt to Tower/Awx 
#  
#EXAMPLE INVENTORY ANSIBLE ENGINE
#[grupo-test]
#test1 vm_ip=10.0.0.20
#test2 vm_ip=10.0.0.21

#[grupo-prueba]
#prueba1 vm_ip=20.0.0.20
#prueba2 vm_ip=20.0.0.21

#[grupo-prueba:vars]
#vc_datacenter=VDC
#vc_folder=/MIQUEL/VSAN/VMS/PRUEBA
#vc_cluster=Cluster-EVC
#vc_note='Created by Ansible'
#vm_datastore=HUS110_LUN0000
#vm_networkportgroup=VLAN6_Formacion
#vm_networkdns1=192.168.6.100
#vm_networkdns2=192.168.6.101
#vm_networkmask=255.255.255.0
#vm_networkgw=10.0.0.1
#vm_memory=1024
#vm_cpu=1
#vm_disksize=20

#[grupo-test:vars]
#vc_datacenter=VDC
#vc_folder=/MIQUEL/VSAN/VMS/TEST
#vc_cluster=Cluster-EVC
#vc_note='Created by Ansible'
#vm_datastore=HUS110_LUN0000
#vm_networkportgroup=VLAN6_Formacion
#vm_networkdns1=192.168.6.100
#vm_networkdns2=192.168.6.101
#vm_networkmask=255.255.255.0
#vm_networkgw=10.0.0.1
#vm_memory=1024
#vm_cpu=1
#vm_disksize=20

#[all:vars]
#vc_hostname=192.168.6.10
#vc_username=administrator@vsphere.local
#vc_password=Secret123!
#vm_template=miquel-template-W2012R2-Std-ES
#dc_domain=vmwareporvexperts.local
#localadminpass=Secret123!


- hosts: all
  gather_facts: false
  serial: 1
  tasks:
  - name: Deploy VM 
    vmware_guest:
      hostname: "{{ vc_hostname }}" #Defined on vars/mail.yml
      username: "{{ vc_username }}" #Defined on vars/mail.yml
      password: "{{ vc_password }}" #Defined on vars/mail.yml
      validate_certs: no
      datacenter: "{{ vc_datacenter }}"
      folder: "{{ vc_folder }}"
      cluster: "{{ vc_cluster }}"
      template: "{{ vm_template }}" #Defined on vars/mail.yml
      name: "{{ inventory_hostname }}"
      annotation: "{{ vc_note }}"
      state: poweredoff
    delegate_to: localhost
   
  - name: Resize disk
    vmware_guest:
      hostname: "{{ vc_hostname }}" #Defined on vars/mail.yml
      username: "{{ vc_username }}" #Defined on vars/mail.yml
      password: "{{ vc_password }}"
      validate_certs: no
      state: present
      name: "{{ inventory_hostname }}"
      disk:
      - size_gb: "{{ vm_disksize}}"
        type: thin
        datastore: "{{ vm_datastore }}"
    delegate_to: localhost  

  - name: Set network settings
    vmware_guest:
      hostname: "{{ vc_hostname }}" #Defined on vars/mail.yml
      username: "{{ vc_username }}" #Defined on vars/mail.yml
      password: "{{ vc_password }}" #Defined on vars/mail.yml
      validate_certs: no
      state: present
      name: "{{ inventory_hostname }}" 
      networks:
      - name: "{{ vm_networkportgroup }}"
        ip: "{{ vm_ip }}"
        netmask: "{{ vm_networkmask }}"
        gateway: "{{ vm_networkgw }}" 
    delegate_to: localhost       
      
  - name: Customization
    vmware_guest:
      hostname: "{{ vc_hostname }}" #Defined on vars/mail.yml
      username: "{{ vc_username }}" #Defined on vars/mail.yml
      password: "{{ vc_password }}" #Defined on vars/mail.yml
      validate_certs: no
      state: present
      name: "{{ inventory_hostname }}"      
      hardware:
         memory_mb: "{{ vm_memory }}"
         num_cpus: "{{ vm_cpu }}"
         scsi: paravirtual
      customization:
        hostname: "{{ inventory_hostname }}"
        autologon: true
        dns_servers:
        - "{{ vm_networkdns1 }}"
        - "{{ vm_networkdns2 }}"
        dns_suffix: "{{ dc_domain}}" #Defined on vars/mail.yml
        password: "{{ localadminpass }}" #Defined on vars/mail.yml
    delegate_to: localhost

  - name: Power on VM
    vmware_guest:
      hostname: "{{ vc_hostname }}" #Defined on vars/mail.yml
      username: "{{ vc_username }}" #Defined on vars/mail.yml
      password: "{{ vc_password }}" #Defined on vars/mail.yml
      validate_certs: no
      state: poweredon
      name: "{{ inventory_hostname }}"
      wait_for_ip_address: yes
    delegate_to: localhost       
    register: task_output

  - name: Register variables to use into Tower workflow
    set_stats:
      data:
        telegram_msg: "VM {{ inventory_hostname }} with IP {{ vm_ip }} has been deployed correctly with Ansible on cluster {{ task_output.instance.hw_esxi_host }} "

